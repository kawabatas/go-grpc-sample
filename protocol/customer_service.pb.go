// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/customer_service.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseType) Reset()         { *m = ResponseType{} }
func (m *ResponseType) String() string { return proto.CompactTextString(m) }
func (*ResponseType) ProtoMessage()    {}
func (*ResponseType) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_service_d3bb2200ffb830b1, []int{0}
}
func (m *ResponseType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseType.Unmarshal(m, b)
}
func (m *ResponseType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseType.Marshal(b, m, deterministic)
}
func (dst *ResponseType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseType.Merge(dst, src)
}
func (m *ResponseType) XXX_Size() int {
	return xxx_messageInfo_ResponseType.Size(m)
}
func (m *ResponseType) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseType.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseType proto.InternalMessageInfo

type RequestType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestType) Reset()         { *m = RequestType{} }
func (m *RequestType) String() string { return proto.CompactTextString(m) }
func (*RequestType) ProtoMessage()    {}
func (*RequestType) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_service_d3bb2200ffb830b1, []int{1}
}
func (m *RequestType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestType.Unmarshal(m, b)
}
func (m *RequestType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestType.Marshal(b, m, deterministic)
}
func (dst *RequestType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestType.Merge(dst, src)
}
func (m *RequestType) XXX_Size() int {
	return xxx_messageInfo_RequestType.Size(m)
}
func (m *RequestType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestType proto.InternalMessageInfo

type Person struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_customer_service_d3bb2200ffb830b1, []int{2}
}
func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (dst *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(dst, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*ResponseType)(nil), "protocol.ResponseType")
	proto.RegisterType((*RequestType)(nil), "protocol.RequestType")
	proto.RegisterType((*Person)(nil), "protocol.Person")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CustomerService service

type CustomerServiceClient interface {
	ListPerson(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (CustomerService_ListPersonClient, error)
	AddPerson(ctx context.Context, in *Person, opts ...grpc.CallOption) (*ResponseType, error)
}

type customerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerServiceClient(cc *grpc.ClientConn) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) ListPerson(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (CustomerService_ListPersonClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_CustomerService_serviceDesc.Streams[0], c.cc, "/protocol.CustomerService/ListPerson", opts...)
	if err != nil {
		return nil, err
	}
	x := &customerServiceListPersonClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CustomerService_ListPersonClient interface {
	Recv() (*Person, error)
	grpc.ClientStream
}

type customerServiceListPersonClient struct {
	grpc.ClientStream
}

func (x *customerServiceListPersonClient) Recv() (*Person, error) {
	m := new(Person)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *customerServiceClient) AddPerson(ctx context.Context, in *Person, opts ...grpc.CallOption) (*ResponseType, error) {
	out := new(ResponseType)
	err := grpc.Invoke(ctx, "/protocol.CustomerService/AddPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CustomerService service

type CustomerServiceServer interface {
	ListPerson(*RequestType, CustomerService_ListPersonServer) error
	AddPerson(context.Context, *Person) (*ResponseType, error)
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_ListPerson_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CustomerServiceServer).ListPerson(m, &customerServiceListPersonServer{stream})
}

type CustomerService_ListPersonServer interface {
	Send(*Person) error
	grpc.ServerStream
}

type customerServiceListPersonServer struct {
	grpc.ServerStream
}

func (x *customerServiceListPersonServer) Send(m *Person) error {
	return x.ServerStream.SendMsg(m)
}

func _CustomerService_AddPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Person)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).AddPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.CustomerService/AddPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).AddPerson(ctx, req.(*Person))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPerson",
			Handler:    _CustomerService_AddPerson_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPerson",
			Handler:       _CustomerService_ListPerson_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protocol/customer_service.proto",
}

func init() {
	proto.RegisterFile("protocol/customer_service.proto", fileDescriptor_customer_service_d3bb2200ffb830b1)
}

var fileDescriptor_customer_service_d3bb2200ffb830b1 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x4f, 0x2e, 0x2d, 0x2e, 0xc9, 0xcf, 0x4d, 0x2d, 0x8a, 0x2f, 0x4e,
	0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x03, 0xcb, 0x08, 0x71, 0xc0, 0x14, 0x28, 0xf1, 0x71, 0xf1,
	0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x86, 0x54, 0x16, 0xa4, 0x2a, 0xf1, 0x72, 0x71,
	0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x80, 0xb9, 0x7a, 0x5c, 0x6c, 0x01, 0xa9, 0x45, 0xc5,
	0xf9, 0x79, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x60, 0xb6, 0x90, 0x00, 0x17, 0x73, 0x62, 0x7a, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b,
	0x10, 0x88, 0x69, 0xd4, 0xca, 0xc8, 0xc5, 0xef, 0x0c, 0xb5, 0x33, 0x18, 0x62, 0xa5, 0x90, 0x25,
	0x17, 0x97, 0x4f, 0x66, 0x71, 0x09, 0xd4, 0x1c, 0x51, 0x3d, 0x98, 0xdd, 0x7a, 0x48, 0x16, 0x49,
	0x09, 0x20, 0x84, 0x21, 0x0a, 0x95, 0x18, 0x0c, 0x18, 0x85, 0xcc, 0xb9, 0x38, 0x1d, 0x53, 0x52,
	0xa0, 0x3a, 0x31, 0x94, 0x48, 0x89, 0x21, 0x9b, 0x85, 0xe4, 0x09, 0x86, 0x24, 0x36, 0xb0, 0x84,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x98, 0x43, 0xce, 0x0a, 0x01, 0x00, 0x00,
}
